#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ SPI –Ω–∞ Raspberry Pi
"""

import os
import subprocess
import sys

def check_spi_module():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª—è spidev"""
    try:
        import spidev
        print("‚úÖ spidev –º–æ–¥—É–ª—å –¥–æ—Å—Ç—É–ø–µ–Ω")
        return True
    except ImportError:
        print("‚ùå spidev –º–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install python3-spidev")
        return False

def check_spi_devices():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ SPI —É—Å—Ç—Ä–æ–π—Å—Ç–≤"""
    try:
        result = subprocess.run(['ls', '/dev/spi*'], capture_output=True, text=True)
        if result.returncode != 0:
            print("‚ùå SPI —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            print("üîß –î–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è SPI:")
            print("   1. sudo raspi-config")
            print("   2. –í—ã–±–µ—Ä–∏—Ç–µ: 3 Interface Options ‚Üí P4 SPI ‚Üí Yes")
            print("   3. sudo reboot")
            return False
        else:
            print("‚úÖ SPI —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã:")
            print(result.stdout.strip())
            return True
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ SPI —É—Å—Ç—Ä–æ–π—Å—Ç–≤: {e}")
        return False

def check_spi_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ SPI"""
    config_files = [
        '/boot/firmware/config.txt',  # –ù–æ–≤–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
        '/boot/config.txt'            # –°—Ç–∞—Ä–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    ]
    
    for config_file in config_files:
        if os.path.exists(config_file):
            print(f"üìÅ –ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ñ–∏–≥: {config_file}")
            try:
                with open(config_file, 'r') as f:
                    content = f.read()
                    if 'dtparam=spi=on' in content:
                        print("‚úÖ SPI –≤–∫–ª—é—á–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
                        return True
                    else:
                        print("‚ùå SPI –Ω–µ –≤–∫–ª—é—á–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
                        return False
            except Exception as e:
                print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞: {e}")
                return False
    
    print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    return False

def test_spi_communication():
    """–¢–µ—Å—Ç SPI –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏"""
    try:
        import spidev
        spi = spidev.SpiDev()
        spi.open(0, 0)  # SPI bus 0, device 0
        spi.max_speed_hz = 1000000
        spi.mode = 0
        
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∑–∞–ø–∏—Å–∏/—á—Ç–µ–Ω–∏—è
        test_data = [0x01, 0x02, 0x03]
        response = spi.xfer2(test_data)
        
        print("‚úÖ SPI –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
        spi.close()
        return True
    except PermissionError:
        print("‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ SPI —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º")
        print("üîß –†–µ—à–µ–Ω–∏–µ: sudo usermod -a -G spi $USER")
        print("   –ó–∞—Ç–µ–º –≤—ã–π–¥–∏—Ç–µ –∏ –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ SPI –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏: {e}")
        return False

def check_spi_permissions():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ SPI"""
    try:
        import os
        import grp
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä—É–ø–ø—ã spi
        try:
            spi_group = grp.getgrnam('spi')
            current_groups = os.getgroups()
            
            if spi_group.gr_gid in current_groups:
                print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥—Ä—É–ø–ø–µ spi")
                return True
            else:
                print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –≤ –≥—Ä—É–ø–ø–µ spi")
                print("üîß –†–µ—à–µ–Ω–∏–µ: sudo usermod -a -G spi $USER")
                print("   –ó–∞—Ç–µ–º –≤—ã–π–¥–∏—Ç–µ –∏ –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞")
                return False
        except KeyError:
            print("‚ùå –ì—Ä—É–ø–ø–∞ spi –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ SPI –Ω–∞ Raspberry Pi")
    print("=" * 40)
    
    checks = [
        ("–ú–æ–¥—É–ª—å spidev", check_spi_module),
        ("SPI —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", check_spi_devices),
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è SPI", check_spi_config),
        ("–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ SPI", check_spi_permissions),
        ("SPI –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è", test_spi_communication)
    ]
    
    passed = 0
    total = len(checks)
    
    for name, check_func in checks:
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞: {name}")
        if check_func():
            passed += 1
        else:
            print(f"‚ùå {name} - –ù–ï –ü–†–û–ô–î–ï–ù–ê")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{total} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ SPI –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        return True
    else:
        print("‚ö†Ô∏è  SPI —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        print("\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –í–∫–ª—é—á–∏—Ç–µ SPI: sudo raspi-config")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ spidev: sudo apt install python3-spidev")
        print("3. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ: sudo reboot")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
